/*
===REMINDER ON USING CSS TRANSITIONS===

The transitions below rely on the react-transition-group dependency,
specifically the <CSSTransition> tag.  Official Documentation: http://reactcommunity.org/react-transition-group/css-transition

For elements that will animate/transition when triggered via function, 
be sure to attach a node reference as follows: 

1.  Create a const variable that will act as the reference:
  const nodeRef = React.useRef(null)

2.  Attach the nodeRef variable to your CSSTransition and tag:

    <CSSTransition nodeRef={nodeRef} in={inProp} timeout={200} classNames='transition-name'>
        <img ref={nodeRef} src={myImg.src} />
    </CSSTransition>


For elements that you want to have an animated transition on page load,
in your transition tag, set the 'in' and 'appear' parameter to 'true'.
Disregard the usage of references for the transition and object.
*/

/* GLOBAL TRANSITIONS */

// Pop
.pop-appear { transform: scale(0); }
.pop-appear-active {
    transform: scale(0);
    transition: all 300ms ease-out;
}
.pop-appear-done {
    transform: scale(1);
    transition: all 300ms ease-out;
}
.pop-enter { transform: scale(0); }
.pop-enter-active {
    transform: scale(0);
    transition: all 300ms ease-out;
}
.pop-enter-done {
    transform: scale(1);
    transition: all 300ms ease-out;
}
.pop-exit { transform: scale(0) }
.pop-exit-active {
    transform: scale(0);
    transition: all 300ms ease-in;
}

// Fade
.fade-appear { opacity: 0; }
.fade-appear-active {
    opacity: 1;
    transition: opacity 300ms;
}
.fade-enter { opacity: 0; }
.fade-enter-active {
    opacity: 1;
    transition: opacity 300ms;
}
.fade-exit { opacity: 1; }
.fade-exit-active {
    opacity: 0;
    transition: opacity 300ms;
}

// Fade Slide
.fade-slide-left-appear {
  opacity: 0;
  transform: translateX(-40px);
}
.fade-slide-left-appear-active {
  opacity: 1;
  transform: translateX(0);
  transition: all 400ms;
}
.fade-slide-right-appear {
    opacity: 0;
    transform: translateX(40px);
}
.fade-slide-right-appear-active {
    opacity: 1;
    transform: translateX(0);
    transition: all 300ms;
}
.fade-slide-up-appear {
    opacity: 0;
    transform: translateY(-40px);
}
.fade-slide-up-appear-active {
    opacity: 1;
    transform: translateY(0);
    transition: all 300ms;
}
.fade-slide-up-enter {
    opacity: 0;
    transform: translateY(-40px);
}
.fade-slide-up-enter-active {
    opacity: 1;
    transform: translateY(0);
    transition: all 300ms;
}
.fade-slide-up-exit {
    opacity: 0;
    transform: translateY(-40px);
}
.fade-slide-up-exit-active {
    opacity: 1;
    transform: translateY(0);
    transition: all 300ms;
}

.fade-slide-down-appear {
    opacity: 0;
    transform: translateY(40px);
}
.fade-slide-down-appear-active {
    opacity: 1;
    transform: translateY(0);
    transition: all 300ms;
}
.fade-slide-left-enter {
  opacity: 0;
  transform: translateX(-40px);
}
.fade-slide-left-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: all 300ms;
}
.fade-slide-right-enter {
    opacity: 0;
    transform: translateX(40px);
}
.fade-slide-right-enter-active {
    opacity: 1;
    transform: translateX(0);
    transition: all 300ms;
}
/* EXCLUSIVE TRANSITIONS */
// Hero Image
.login-image-enter {
    opacity: 0;
    transform: translateX(100px);
}

.login-image-enter-active {
    opacity: 1;
    transform: translateX(0);
    transition: all 300ms ease;
}